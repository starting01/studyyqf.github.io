<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 注解扫描包,使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.fd.controller"/>
    <!--静态资源过滤！！！！-->
    <mvc:default-servlet-handler/>
    <!-- 开启注解 -->
    <mvc:annotation-driven/>
	
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->    
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>
	
	<!--JSON乱码配置-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
        <!--拦截器配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- /** 代表拦截所有请求-->
            <mvc:mapping path="/admin/*"/>
		<!--配置不需要拦截的路径 -->
            <!-- <mvc:exclude-mapping path="/admin/login.jsp" />
             <mvc:exclude-mapping path="/admin/login.do" />        -->
            <bean class="com.fd.interceptor.AdminInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


 <!--启动SpringMVC的注解功能，完成请求和注解POJO的映射   -->
<!--     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
         <property name="messageConverters">
             <list>
                 &lt;!&ndash;JSON转换器&ndash;&gt;
                 <ref bean="mappingJacksonHttpMessageConverter" />
             </list>
         </property>
     </bean>   -->
    
      <!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包  -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        <!--默认编码-->
        <property name="defaultEncoding" value="utf-8"/>
        <!--设置文件上传最大值-->
        <property name="maxUploadSize" value="5400000"/>
        <!--设置内存中的最大值-->
        <property name="maxInMemorySize" value="4609"/>
        <!--设置推迟文件解析，以便捕获文件大小的异常-->
        <property name="resolveLazily" value="true"/>
    </bean>
    
  <!-- 注册格式化转换器 -->  
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="formatters">
    		<set>
    			<!-- 注册自定义格式化转换器 -->
    		</set>
    	</property>
    </bean>
    <!--配置消息属性文件-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="fileEncodings" value="utf-8" />
    </bean>
    <!--注册校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>
    <!--开启spring的Valid功能-->
    <mvc:annotation-driven validator="validator"/>
</beans>